/*!
 *  BayLang Constructor
 */

namespace BayLang.Constructor.Frontend;

use Runtime.Entity.Hook;
use Runtime.Entity.Provider;
use Runtime.ORM.Annotations.Database;
use Runtime.Unit.UnitTest;
use Runtime.Web.Annotations.Api;
use Runtime.Web.Annotations.RemoteClass;
use Runtime.Web.Annotations.Route;
use Runtime.Web.Annotations.SetupLayout;
use Runtime.Web.Annotations.WidgetModelFactory;


static class ModuleDescription
{
	/**
	 * Returns module name
	 * @return string
	 */
	pure string getModuleName() => "BayLang.Constructor.Frontend";
	
	
	/**
	 * Returns module name
	 * @return string
	 */
	pure string getModuleVersion() => "0.0.1";
	
	
	/**
	 * Returns required modules
	 * @return Dict<string>
	 */
	pure Dict<string> requiredModules() =>
	{
		"Runtime": ">=0.12",
		"Runtime.Web": ">=0.12",
		"Runtime.Widget": ">=0.12",
		
		#ifdef BACKEND then
		"BayLang.Constructor.Backend": "*",
		#endif
	};
	
	
	/**
	 * Returns enities
	 */
	pure Collection<Dict> entities() =>
	[
		new SetupLayout({
			"names": {
				"baylang": "BayLang.Constructor.Frontend.Layout.DefaultLayout",
			},
		}),
		
		#ifdef BACKEND then
		
		new WidgetModelFactory("BayLang.Constructor.Frontend.Blocks.MenuModel"),
		new Route("BayLang.Constructor.Frontend.Routes"),
		
		#endif
	];
}
