/*!
 *  BayLang Constructor
 */

namespace BayLang.Constructor.Frontend;

use Runtime.fs;
use Runtime.BaseHook;
use BayLang.Helper.Project;


class ConstructorHook extends BaseHook
{
	static const string GET_FRAME_PAGE_URL = "baylang.constructor::get_frame_page_url";
	
	
	/**
	 * Register hooks
	 */
	void register_hooks()
	{
		this.register(static::GET_FRAME_PAGE_URL);
	}
	
	
	/**
	 * Returns method name by hook name
	 */
	string getMethodName(string hook_name)
	{
		if (hook_name == static::GET_FRAME_PAGE_URL) return "get_frame_page_url";
		return "";
	}
	
	
	/**
	 * Returns projects list
	 */
	static string getFramePageUrl(string project_id, string current_widget)
	{
		Dict result = @.callHook(static::GET_FRAME_PAGE_URL, {
			"page_url": "",
			"project_id": project_id,
			"current_widget": current_widget,
		});
		return result.get("page_url");
	}
	
	
	/**
	 * Returns projects list
	 */
	void get_frame_page_url(Dict params)
	{
		string page_url = "/project/" ~ params.get("project_id") ~
			"/iframe/open/widget?widget_name=" ~ params.get("current_widget")
		;
		params.set("page_url", page_url);
	}
}