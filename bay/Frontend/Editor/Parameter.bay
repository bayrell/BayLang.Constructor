/*!
 *  BayLang Constructor
 */

namespace BayLang.Constructor.Frontend.Editor;

use Runtime.BaseObject;
use Runtime.Web.Annotations.Param;
use BayLang.Constructor.Frontend.Editor.CodeModel;
use BayLang.Constructor.Frontend.Editor.SelectedItemModel;
use BayLang.Constructor.Frontend.Editor.WidgetTreeItem;
use BayLang.OpCodes.OpHtmlAttribute;


class Parameter extends BaseObject
{
	string name = "";
	var value = null;
	bool display = false;
	Param annotation = null;
	OpHtmlAttribute op_attr = null;
	SelectedItemModel selected = null;
	
	
	/**
	 * Constructor
	 */
	public void constructor(Dict params = null)
	{
		parent();
		this._assign_values(params);
	}
	
	
	/**
	 * Set attribute
	 */
	void setHtmlAttribute(OpHtmlAttribute op_attr)
	{
		this.op_attr = op_attr;
		this.value = CodeModel::getValueFromOpCode(op_attr.value);
		
		if (op_attr.key == "class")
		{
			this.value = rs::split(" ", this.value);
		}
	}
	
	
	/**
	 * Set value
	 */
	void setValue(var value)
	{
		/* Create html attribute */
		if (this.op_attr == null)
		{
			this.op_attr = new OpHtmlAttribute
			{
				"key": this.name,
			};
			this.selected.item.op_code.attrs.prepend(this.op_attr);
		}
		
		/* Change widget name value */
		if (this.name == "widget_name")
		{
			this.value = value.get(0);
		}
		
		/* Change class name value */
		else if (this.name == "class_name")
		{
			this.value = value.slice(1);
			this.op_attr.value = CodeModel::getOpCodeByValue(rs::join(" ", value));
		}
		
		/* Set value */
		else
		{
			this.value = value;
			this.op_attr.value = CodeModel::getOpCodeByValue(value);
		}
	}
}