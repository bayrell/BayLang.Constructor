/*!
 *  BayLang Constructor
 */

namespace BayLang.Constructor.Frontend.Editor;

use Runtime.BaseObject;
use BayLang.Constructor.Frontend.Editor.WidgetEditPageModel;
use BayLang.Exceptions.ParserUnknownError;
use BayLang.LangBay.ParserBay;
use BayLang.LangES6.TranslatorES6;
use BayLang.OpCodes.BaseOpCode;
use BayLang.OpCodes.OpHtmlStyle;


class WidgetItemStyle extends BaseObject
{
    WidgetEditPageModel parent_widget = null;
    OpHtmlStyle op_code = null;
    Dict css_values = {};
    string selector_name = "";
    string source = "";
    string content = "";
    
    
    /**
	 * Translate CSS
	 */
	list translateCSS(ParserBay parser, TranslatorES6 translator, string source)
	{
		/* Parse source */
		BaseOpCode op_code = null;
		try
		{
			parser = parser::setContent(parser, source ~ "}");
			list res = parser.parser_html::readCssBody(parser);
			op_code = res.get(1);
		}
		catch (ParserUnknownError e)
		{
		}
		
		/* Translate source */
		if (not op_code) return "";
		
		Vector items = [];
		items.push("var content = \"\";");
		list res = translator.expression::Expression(translator, op_code);
		items.push("content += Runtime.rtl.toStr(" ~ res.get(1) ~ ");");
		
		string content = window.eval(rs::join("\n", items));
		return content;
	}
    
    
    /**
     * Update CSS values
     */
    void updateCSSValues()
    {
        this.css_values = {};
    }
    
    
    /**
     * Set source
     */
    void setSource(string source)
    {
        ParserBay parser = this.parent_widget.createParser();
		TranslatorES6 translator = this.parent_widget.createTranslator();
		
		/* Parse CSS */
        string css_code = this.selector_name ~ "{" ~ source ~ "}";
		string content = this.translateCSS(parser, translator, css_code);
		
		/* Set content */
		this.source = source;
        this.content = content;
        this.updateCSSValues();
    }
}