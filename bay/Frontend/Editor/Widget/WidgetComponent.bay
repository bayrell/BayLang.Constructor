/*!
 *  BayLang Constructor
 */

namespace BayLang.Constructor.Frontend.Editor.Widget;

use BayLang.Constructor.Frontend.Editor.Parameters.Parameter;
use BayLang.Constructor.Frontend.Editor.Widget.Widget;
use BayLang.Constructor.Frontend.Editor.Widget.WidgetTag;
use BayLang.Constructor.Frontend.Editor.WidgetEditPageModel;
use BayLang.Constructor.Frontend.WidgetPage.WidgetSettingsInterface;
use BayLang.OpCodes.BaseOpCode;


class WidgetComponent extends WidgetTag
{
	/* Model params */
	bool is_model = false;
	string model_class_name = null;
	string component_class_name = null;
	BaseOpCode primary_model_code = null;
	Collection<BaseOpCode> model_codes = null;
	
	
	/**
	 * Returns true if component
	 */
	bool isComponent() => true;
	
	
	/**
	 * Returns true if component has model
	 */
	bool isModel() => this.is_model;
	
	
	/**
	 * Constructor
	 */
	public void constructor(WidgetEditPageModel page_model, BaseOpCode code)
	{
		parent(page_model, code);
		
		/* Setup component class name */
		this.component_class_name = this.page_model.component_processor
			.getModuleClassName(code.tag_name)
		;
	}
	
	
	/**
	 * Can insert widget
	 */
	bool canInsert(WidgetSettingsInterface widget_settings)
	{
		if (not this.settings) return false;
		return this.settings.canInsert(widget_settings);
	}
	
	
	/**
	 * Init params
	 */
	void initParams()
	{
		/* Setup model */
		this.page_model.model_processor.setupWidget(this);
		
		/* Init */
		parent();
	}
}