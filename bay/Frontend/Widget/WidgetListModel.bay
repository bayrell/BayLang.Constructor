/*!
 *  BayLang Constructor
 */

namespace BayLang.Constructor.Frontend.Widget;

use Runtime.Callback;
use Runtime.Entity.Factory;
use Runtime.Web.BasePageModel;
use Runtime.Web.ModelFactory;
use Runtime.Web.RenderContainer;
use Runtime.Web.Messages.ClickMessage;
use Runtime.Widget.Table.TableModel;
use Runtime.Widget.Label;
use Runtime.Widget.RowButtonsModel;
use BayLang.Constructor.Frontend.Widget.WidgetList;


class WidgetListModel extends BasePageModel
{
	string component = classof WidgetList;
	string project_id = "";
	string module_id = "";
	
	
	/**
	 * Init widget settings
	 */
	void initWidget(Dict params)
	{
		parent(params);
		
		/* Set route matches */
		this.project_id = this.layout.route.matches.get("project_id");
		this.module_id = this.layout.route.matches.get("module_id");
		
		/* Add top buttons */
		this.top_buttons = this.addWidget(
			classof RowButtonsModel,
			{
				"widget_name": "top_buttons",
				"buttons":
				[
					{
						"content": "Add",
						"widget_name": "add_button",
						"styles": [
							"success",
						]
					},
				],
				"events":
				{
					"click": new Callback(this, "onTopButtonsClick"),
				},
			}
		);
		
		/* Add table */
		this.table = this.addWidget(
			classof TableModel,
			{
				"widget_name": "table",
				"get_title": void (Dict params)
				{
					string action = params.get("action");
					Dict item = params.get("item");
					if (action == "add")
					{
						return "Add module";
					}
					if (action == "edit")
					{
						return "Edit module " ~ item.get("id");
					}
					if (action == "delete")
					{
						return "Delete module " ~ item.get("id");
					}
					return "";
				},
				"styles": ["border"],
				
				/* Table storage */
				"storage": new Factory
				(
					"Runtime.Widget.Table.TableStorage",
					{
						"api_name": "baylang.constructor.widget::search",
					}
				),
				
				/* Foreign key */
				"foreign_key": {
					"project_id": this.project_id,
					"module_id": this.module_id,
				},
				
				/* Table fields */
				"fields":
				[
					{
						"name": "row_number",
					},
					{
						"name": "id",
						"label": "ID",
						"component": "Runtime.Widget.Label",
					},
					{
						"name": "row_buttons",
						"model": new ModelFactory(
							"Runtime.Widget.RowButtonsModel",
							{
								"buttons":
								[
									{
										"widget_name": "edit",
										"content": "Edit",
										"href": void (Dict data)
										{
											Dict item = data.get("item");
											return this.layout.url(
												"baylang:project:widget:edit",
												{
													"project_id": this.project_id,
													"module_id": this.module_id,
													"widget_name": item.get("id"),
												}
											);
										},
										"styles":
										[
											"default",
											"small"
										],
									}
								],
							}
						),
					},
				],
			}
		);
	}
	
	
	/**
	 * Build title
	 */
	void buildTitle(RenderContainer container)
	{
		this.layout.setPageTitle("Widgets");
	}
	
	
	/**
	 * Top buttons click
	 */
	void onTopButtonsClick(ClickMessage message)
	{
		if (message.widget.widget_name == "add_button")
		{
			/* this.table.save_dialog.showAdd(); */
		}
	}
}