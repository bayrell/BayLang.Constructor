/*!
 *  BayLang Constructor
 */

namespace BayLang.Constructor.Backend.Api;

use Runtime.fs;
use Runtime.Web.Annotations.ApiMethod;
use Runtime.Widget.Crud.SearchApi;
use BayLang.Constructor.Backend.ApiHook;
use BayLang.Helper.Project;


class ProjectSearchApi extends SearchApi
{
	/**
	 * Returns api name
	 */
	static string getApiName() => "baylang.constructor.project::search";
	
	
	/**
	 * Action search
	 */
	@ApiMethod
	async void actionSearch()
	{
		/* Get projects */
		Collection items = await ApiHook::getProjectList();
		
		/* Filter items */
		items = items.map(
			Dict (Project project) => {
				"id": project.getID(),
				"name": project.getName(),
				"description": project.getDescription(),
			}
		);
		
		/* Set result */
		this.success({
			"data": {
				"items": items,
				"page": 0,
				"pages": 1,
			}
		})
	}
}